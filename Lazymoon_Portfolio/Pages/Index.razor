@page "/"

@using static Lazymoon_Portfolio.UIUtil;
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>Lazymoon</PageTitle>
<section id="@ESectionId.Main.ToDispalyName()">
    <!--Main-->
    <div id="Main-">
        <MudContainer Class="pl-3 pt-16 pb-16">
            <Animation AnimationType="Component.Animation.EAnimations.FadeInLeft">
                <div class="box">
                    <div class="inner-box">
                        <div class="pl-7 pt-6 display-flex">
                            <MudText Typo="Typo.h4">@Title</MudText>
                            <MudText Class="text-cursor mb-5" Typo="Typo.h4">|</MudText>
                        </div>
                    </div>
                </div>
            </Animation>
            <Animation AnimationType="Component.Animation.EAnimations.FadeInLeft" Delay="300">
                <MudText Typo="Typo.body1">

                </MudText>
            </Animation>
            <MudSpacer />
        </MudContainer>
        <StikerComponent OnClick="@(()=>{System.Diagnostics.Debug.WriteLine("Click");})" Position="StikerComponent.EPosition.Bottom" Witdh="200" Height="200" Rotation="15" BaseId="Main-" Top="100" Left="20" class="class" imgSrc="Image/lz.png" />
        <StikerComponent OnClick="@(()=>{string url = "https://github.com/jikjky"; NavigationManager.NavigateTo($"javascript:window.open('{url}','_blank')");})" Position="StikerComponent.EPosition.Bottom" Witdh="100" Height="100" Rotation="15" BaseId="Main-" Top="200" Left="-10" class="class" imgSrc="Image/github-icon.png" />
        <StikerComponent OnClick="@(()=>{string url = "https://www.youtube.com/channel/UCjeyFRwDpdyev_HmiABTvGg"; NavigationManager.NavigateTo($"javascript:window.open('{url}','_blank')");})" Position="StikerComponent.EPosition.Bottom" Witdh="100" Height="100" Rotation="-5" BaseId="Main-" Top="300" Left="-20" class="class" imgSrc="Image/YouTube.png" />


    </div>

    <div>
        <Animation AnimationType="Component.Animation.EAnimations.FadeIn" Delay="300">
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="false">
                <img class="rounded-circle demonstration demonstration-sm" src="Image/dsBuffer.png" />
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <div class="graphic-wrapper">
                    <img class="rounded-circle demonstration" src="Image/dsBuffer.png" />
                </div>
            </MudHidden>
        </Animation>
        <div class="index-background skew stripe" />
    </div>
    <div id="Career-">
        <MudContainer class="pt-16 pb-16">
            <Animation AnimationType="Component.Animation.EAnimations.FadeInDown">
                <MudText Align="Align.Center" Class="pt-16 pb-10" Typo="Typo.h4">Career</MudText>
            </Animation>
            <MudGrid Justify="Justify.Center">
                <MudItem Class="image-logo">
                    <Animation AnimationType="Component.Animation.EAnimations.FadeInDown" Delay="300">
                        <a href="http://www.enctech.co.kr/kr/">
                            <img src="Image/enc.png" />
                            <div class="text-logo">
                                <MudText Class="pb-1" Typo="Typo.h5" Align="Align.Center">Enc Technology</MudText>
                                <MudText Typo="Typo.body2" Class="" Align="Align.Center">2017.2 ~ 2020.4</MudText>
                            </div>
                        </a>
                    </Animation>
                </MudItem>
                <MudItem Class="image-logo">

                    <Animation AnimationType="Component.Animation.EAnimations.FadeInDown" Delay="600">
                        <a href="https://42seoul.kr">
                            <img src="Image/42.png" />
                            <MudText Class="pb-1" Typo="Typo.h5" Align="Align.Center">42 Seoul</MudText>
                            <MudText Typo="Typo.body2" Class="" Align="Align.Center">2020.9 ~ 2022.6</MudText>
                        </a>
                    </Animation>
                </MudItem>
                <MudItem Class="image-logo">
                    <Animation AnimationType="Component.Animation.EAnimations.FadeInDown" Delay="900">
                        <a href="https://corp.twosun.com/">
                            <img src="Image/twosun.png" />
                            <MudText Class="pb-1" Typo="Typo.h5" Align="Align.Center">Twosun</MudText>
                            <MudText Typo="Typo.body2" Class="" Align="Align.Center">2022.9 ~ 2022.2</MudText>
                        </a>
                    </Animation>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </div>
</section>
<!--Enc Career-->
<section id="@ESectionId.Enc.ToDispalyName()">
    <div id="Career-Enc">
        <div class="index-project-background">
            <MudContainer class="">
                <div class="display-flex-center">
                    <img src="Image/enc.png" />
                </div>
                <MudText Typo="Typo.body1" Class="" Align="Align.Center">Display 검사/계측/평가 장비회사</MudText>
                <MudText Typo="Typo.body2" Class="" Align="Align.Center">C++Builder/Winform/WPF/CIM/TCP/Serial/ModBus</MudText>
                <MudCarousel Class="index-carousel" TData="object">
                    <MudCarouselItem Class="pb-16" Transition="Transition.Slide" Color="@Color.Primary">
                        <div class="display-flex-center">
                            <img class="pt-16" src="Image/1-1.png" />
                        </div>
                        <MudText Align="Align.Center" Typo="Typo.h3">SVI</MudText>
                        <MudText Align="Align.Center" Typo="Typo.body1">휴대폰 디스플레이 표면 검사장비</MudText>
                        <MudText Align="Align.Center" Typo="Typo.body1">C++,C#</MudText>
                    </MudCarouselItem>
                    <MudCarouselItem Class="pb-16" Transition="Transition.Slide" Color="@Color.Secondary">
                        <div class="display-flex-center">
                            <img class="pt-16" src="Image/1-2.png" />
                        </div>
                        <MudText Align="Align.Center" Typo="Typo.h3">IVL / LTS</MudText>
                        <MudText Align="Align.Center" Typo="Typo.body1">휴대폰 디스플레이 휘도,수명 측정장비</MudText>
                        <MudText Align="Align.Center" Typo="Typo.body1">C++,C#</MudText>
                    </MudCarouselItem>
                </MudCarousel>
            </MudContainer>
        </div>
    </div>
</section>
<!--42Seoul Career-->
<section id="@ESectionId.C42Seoul.ToDispalyName()">
    <div class="index-bg-container index-bg">
        <div class="index-bg color-black"></div>
        <MudHidden Breakpoint="Breakpoint.LgAndUp" Invert="false">
            <video class="index-bg-video md" src="video/42_Cube3D_1080pFHR_.mp4" autoplay loop muted></video>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.LgAndUp" Invert="true">
            <video class="index-bg-video" src="video/42_FDF Project_1080pFHR_.mp4" autoplay loop muted></video>
        </MudHidden>
    </div>
    <div class="index-section">
        <div class="index-bg-container">
            <div class="reverse skew stripe index-background color-blue" />
            <div class="stripe index-background color-blue index-bg-abs-position">
            </div>
            <div class="display-flex-center">
                <MudImage Style="margin-top: -150px;" Src="Image/42.png" />
            </div>
            <MudText Typo="Typo.body1" Class="" Align="Align.Center">
                '서버' '가상환경' '알고리즘' '파일' '입출력' '그래픽' '통신'등
            </MudText>
            <MudText Typo="Typo.body1" Class="" Align="Align.Center">
                다양한 분야의 프로젝트를 진행하였고
            </MudText>
            <MudText Typo="Typo.body1" Class="" Align="Align.Center">
                프로젝트를 진행하며 필요한 부분을 스스로 공부하고 문제점을 고민하고 해결하며 프로젝트를 완성하였고
            </MudText>
            <MudText Typo="Typo.body1" Class="" Align="Align.Center">
                이 일련의 과정들이 자주적으로 성장할 수 있는 개발자가 되는 데 큰 도움이 되었던 교육프로그램
            </MudText>
            <MudGrid Justify="Justify.Center">
                <MudImage Class="mt-3 mb-3 rounded-lg index-42-size" Width="null" Src="Image/42/a.png" />
            </MudGrid>

        </div>
    </div>
</section>
<!--Twosun Career-->
<section id="@ESectionId.Twosun.ToDispalyName()">
    <div class="index-project-background">
        <div class="display-flex-center">
            <MudImage Src="Image/twosun.png" />
        </div>

        <MudText Typo="Typo.body2" Class="" Align="Align.Center">Postgress Database API</MudText>
        <div style="height:900px;" class="slideshow-container" oncontextmenu="return false;">
            <div class="Slidesbackground">
                <div class="mySlides-1 slides-database fade">
                    <img src="Image/twosun/database.png" class="slideshow-image" />
                </div>
                <div class="mySlides-1 slides-database fade">
                    <img src="Image/twosun/api.png" class="slideshow-image" />
                </div>
            </div>
        </div>

        <MudText Typo="Typo.body2" Class="" Align="Align.Center">Web Backoffice</MudText>
        <div style="height:400px;" class="slideshow-container" oncontextmenu="return false;">
            <div class="Slidesbackground">
                <div class="mySlides-2 slides-web fade">
                    <img src="Image/twosun/admin1.png" class="slideshow-image" />
                </div>
                <div class="mySlides-2 slides-web fade">
                    <img src="Image/twosun/admin2.png" class="slideshow-image" />
                </div>
                <div class="mySlides-2 slides-web fade">
                    <img src="Image/twosun/gallery_web1.png" class="slideshow-image" />
                </div>
                <div class="mySlides-2 slides-web fade">
                    <img src="Image/twosun/gallery_web2.png" class="slideshow-image" />
                </div>
            </div>
        </div>

        <MudText Typo="Typo.body2" Class="" Align="Align.Center">Maui Mobile</MudText>
        <div style="height:800px;" class="slideshow-container" oncontextmenu="return false;">
            <div class="Slidesbackground">
                <div class="mySlides-3 slides-mobile fade">
                    <img src="Image/twosun/gallery_mobile1.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-3 slides-mobile fade">
                    <img src="Image/twosun/gallery_mobile2.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-3 slides-mobile fade">
                    <img src="Image/twosun/gallery_mobile3.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-3 slides-mobile fade">
                    <img src="Image/twosun/gallery_mobile4.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-3 slides-mobile fade">
                    <img src="Image/twosun/gallery_mobile5.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-3 slides-mobile fade">
                    <img src="Image/twosun/gallery_mobile6.jpg" class="slideshow-image" />
                </div>
            </div>
        </div>
        <div style="top:-40px;" class="slideshow-container md-3" oncontextmenu="return false;">
            <div class="Slidesbackground">
                <div class="mySlides-4 slides-mobile2 fade">
                    <img src="Image/twosun/WD_1.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-4 slides-mobile2 fade">
                    <img src="Image/twosun/WD_2.jpg" class="slideshow-image" />
                </div>
                <div class="mySlides-4 slides-mobile2 fade">
                    <img src="Image/twosun/WD_3.jpg" class="slideshow-image" />
                </div>
            </div>
        </div>
    </div>
</section>
<div class="section-manager">
    @{
        foreach (ESectionId item in Enum.GetValues(typeof(ESectionId)))
        {
            <a class="ml-3 md-1" href="@($"javascript:gotoScroll(\'{item.ToDispalyName()}\')")">
                <MudStack Row="true">
                    @if (lastId == item.ToDispalyName())
                    {
                        <div class="circle @($"{(isFirst?"":"ok size-up")}")" />
                    }
                    else
                    {
                        <div class="circle @($"{(isFirst?"ok":"size-down")}")" />
                    }
                    <MudText class="text-bg" Color="Color.Primary"><b>@item.ToDispalyName()</b></MudText>
                </MudStack>
            </a>
        }
    }
</div>
<MudScrollToTop>
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowDropUp" />
</MudScrollToTop>

@code
{
    bool isFirst = true;
    string Title { get; set; } = "";
    string Section { get; set; } = "";
    bool IsWrite { get; set; } = true;
    int WriteIndex { get; set; } = 0;
    object CountLock = 0;
    int Count { get; set; } = 0;

    protected override void OnInitialized()
    {
        JavaScript.OnFindPosition += ChangeAddress;
        var timer = new System.Timers.Timer(100);
        timer.Elapsed += (o, e) => { OnElapsed(); };
        timer.Start();
    }

    async void Write(string text, int nextIndex)
    {
        if (IsWrite)
        {
            Random rd = new Random();
            await Task.Delay(1 + rd.Next(50));
            lock (CountLock)
            {
                Title += text[Count];
                Count++;
                if (Title == text)
                {
                    Count = 0;
                    IsWrite = false;
                }
            }
        }
        else
        {
            lock (CountLock)
            {
                Count++;
                if (Count > 20)
                {
                    Title = Title.Remove(Title.Length - 1);
                    if (string.IsNullOrEmpty(Title))
                    {
                        Count = 0;
                        IsWrite = true;
                        WriteIndex = nextIndex;
                    }
                }
            }
        }
        await InvokeAsync(() => StateHasChanged());
    }

    void OnElapsed()
    {
        string name = "Jung Gwang Young";
        string hello = "Hello World!";
        string lazymoon = "Lazymoon.net";
        switch (WriteIndex)
        {
            case 0: Write(name, 1); break;
            case 1: Write(hello, 2); break;
            case 2: Write(lazymoon, 0); break;
            default: break;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("onReady");
            isFirst = false;
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    string lastId = "";

    async Task ChangeAddress(string id)
    {
        if (lastId != id)
        {
            lastId = id;
            Section = id;
            await InvokeAsync(() => StateHasChanged());
        }
        return;
    }

    [JSInvokable]
    public static void FindPosition(string id)
    {
        JavaScript.OnFindPosition?.Invoke(id);
        return;
    }
}